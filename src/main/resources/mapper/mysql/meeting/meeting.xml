<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pmp4.amoimproject.meeting.model.MeetingDAO">
    <insert id="insertMeeting" parameterType="meetingVo">
        insert into MEETING(user_no, title, content, category_code, person_number, dues)
        values (#{userNo}, #{title}, #{content}, #{categoryCode}, #{personNumber}, #{dues})

        <selectKey keyProperty="no" keyColumn="no" resultType="Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>






    <!-- 모임 정보를 카드로 내보내기 위한 컬럼 정보 구성 -->
    <!-- 모임 정보를 카드로 내보내기 위한 컬럼 정보 구성 -->
    <!-- 모임 정보를 카드로 내보내기 위한 컬럼 정보 구성 -->
    <!-- 모임 정보를 카드로 내보내기 위한 컬럼 정보 구성 -->
    <sql id="moimCardSelect">
        select
        <choose>
            <when test="number">
                count(*)
            </when>
            <otherwise>
                m.NO,
                m.TITLE,
                (
                    select i2.NAME
                    from INTERESTS i2
                    where i2.CATEGORY_CODE = i.CATEGORY_PARENT
                ) "CATEGORY_PARENT",
                m.CATEGORY_CODE,
                i.name CATEGORY_NAME,
                (
                    select count(*)
                    from USER_MEETING um
                    where um.MEETING_NO = m.NO
                ) PERSON_COUNT,
                m.PERSON_NUMBER,
                (
                    select JSON_ARRAYAGG(T.TAG_NAME) TAGS
                    from MEETING_TAG M join TAG T on T.TAG_NO = M.TAG_NO
                    where MEETING_NO = m.NO
                    group by MEETING_NO
                ) TAGS,
                m.DUES,
                (
                    select count(*)
                    from MEETING_LIKE ML
                    where ML.MEETING_NO = m.NO
                ) LIKE_COUNT,
                MI.IMAGE_NAME,
                MA.SIGUNGU,
                m.REGDATE
            </otherwise>
        </choose>
        from
            MEETING m join INTERESTS I on I.CATEGORY_CODE = m.CATEGORY_CODE
                      join MEETING_ADDRESS MA on m.NO = MA.MEETING_NO
                      join MEETING_IMAGES MI on m.NO = MI.MEETING_NO
        where DEL_TAG = 'N' and MI.SEQ = 1
    </sql>



    <!-- 모임 정보를 카드로 내보내기 위한 from -->
    <!-- 모임 정보를 카드로 내보내기 위한 from -->
    <!-- 모임 정보를 카드로 내보내기 위한 from -->
    <!-- 모임 정보를 카드로 내보내기 위한 from -->
<!--    <sql id="moimCardJoin">-->
<!--        from-->
<!--            MEETING m join INTERESTS I on I.CATEGORY_CODE = m.CATEGORY_CODE-->
<!--                      join MEETING_ADDRESS MA on m.NO = MA.MEETING_NO-->
<!--                      join MEETING_IMAGES MI on m.NO = MI.MEETING_NO-->
<!--        where DEL_TAG = 'N' and MI.SEQ = 1-->
<!--    </sql>-->





    <select id="selectByUserNoCard" parameterType="hashMap" resultType="hashMap">
        <include refid="moimCardSelect"/>
        <choose>
            <when test='type != null and (type eq "USER_NO".toString())'>
                and ${type} = #{key}
                order by m.REGDATE desc
            </when>
            <when test='type != null and (type eq "BCODE".toString())'>
                and ${type} like CONCAT(#{key}, '%') order by LIKE_COUNT desc
            </when>
            <when test='type != null and (type eq "i.CATEGORY_CODE".toString())'>
                and ${type} like CONCAT(#{key}, '%') order by LIKE_COUNT desc
            </when>
        </choose>
        LIMIT #{length} OFFSET #{start}
    </select>

    <select id="selectByUserNoCardPageCount" parameterType="hashMap" resultType="int">
        <include refid="moimCardSelect"/>
        <choose>
            <when test='type != null and (type eq "USER_NO".toString())'>
                and ${type} = #{key}
                order by m.REGDATE desc
            </when>
            <when test='type != null and (type eq "BCODE".toString())'>
                and ${type} like CONCAT(#{key}, '%')
            </when>
            <when test='type != null and (type eq "i.CATEGORY_CODE".toString())'>
                and ${type} like CONCAT(#{key}, '%')
            </when>
        </choose>
    </select>
    

    

    <select id="signingUpMoim" parameterType="hashMap" resultType="hashMap">
        select M.NO,
               M.TITLE,
               (
                   select i2.NAME
                   from INTERESTS i2
                   where i2.CATEGORY_CODE = i.CATEGORY_PARENT
               ) "CATEGORY_PARENT",
               M.CATEGORY_CODE,
               I.NAME CATEGORY_NAME,
               (
                   select count(*)
                   from USER_MEETING um
                   where um.MEETING_NO = m.NO
               ) PERSON_COUNT,
               m.PERSON_NUMBER,
               (
                   select JSON_ARRAYAGG(T.TAG_NAME) TAGS
                   from MEETING_TAG M
                            join TAG T on T.TAG_NO = M.TAG_NO
                   where MEETING_NO = m.NO
                   group by MEETING_NO
               ) TAGS,
               m.DUES,
               (
                   select count(*)
                   from MEETING_LIKE ML
                   where ML.MEETING_NO = m.NO
               ) LIKE_COUNT,
               MI.IMAGE_NAME,
               MA.SIGUNGU,
               M.REGDATE
        from USER_MEETING UM join USERS U on U.USER_NO = UM.USER_NO
                             join MEETING M on M.NO = UM.MEETING_NO
                             join INTERESTS I on M.CATEGORY_CODE = I.CATEGORY_CODE
                             join MEETING_IMAGES MI on M.NO = MI.MEETING_NO
                             join MEETING_ADDRESS MA on M.NO = MA.MEETING_NO
        where UM.USER_NO = #{userNo}
          and RIGHT_NO = 2
          and REG_LEVEL = 1
          and UM.OUT_DATE is null
          and U.OUT_DATE is null
        LIMIT #{length} OFFSET #{start}
    </select>
    
    
    
    
    
    <resultMap id="meetingViewMap" type="hashMap">
        <association property="CONTENTS" column="no" javaType="hashMap">
            <id column="NO" jdbcType="BIGINT" property="NO"/>
            <result column="USER_NO" jdbcType="BIGINT" property="USER_NO"/>
            <result column="TITLE" jdbcType="VARCHAR" property="TITLE"/>
            <result column="CONTENT" jdbcType="VARCHAR" property="CONTENT"/>
            <result column="CATEGORY_PARENT" jdbcType="VARCHAR" property="CATEGORY_PARENT"/>
            <result column="CATEGORY_CODE" jdbcType="VARCHAR" property="CATEGORY_CODE"/>
            <result column="CATEGORY_PARENT_NAME" jdbcType="VARCHAR" property="CATEGORY_PARENT_NAME"/>
            <result column="CATEGORY_NAME" jdbcType="VARCHAR" property="CATEGORY_NAME"/>
            <result column="TAGS" jdbcType="VARCHAR" property="TAGS"/>
            <result column="IMAGE_NAME" jdbcType="VARCHAR" property="IMAGE_NAME"/>
            <result column="ADDRESS_NO" jdbcType="BIGINT" property="ADDRESS_NO"/>
            <result column="ADDRESS" jdbcType="VARCHAR" property="ADDRESS"/>
            <result column="ROAD_ADDRESS" jdbcType="VARCHAR" property="ROAD_ADDRESS"/>
            <result column="JIBUN_ADDRESS" jdbcType="VARCHAR" property="JIBUN_ADDRESS"/>
            <result column="LAT_Y" jdbcType="DOUBLE" property="LAT_Y"/>
            <result column="LON_X" jdbcType="DOUBLE" property="LON_X"/>
            <result column="PLACE_NAME" jdbcType="VARCHAR" property="PLACE_NAME"/>
            <result column="LIKE_COUNT" jdbcType="BIGINT" property="LIKE_COUNT"/>
            <result column="PERSON_NUMBER" jdbcType="BIGINT" property="PERSON_NUMBER"/>
            <result column="PERSON_COUNT" jdbcType="BIGINT" property="PERSON_COUNT"/>
        </association>
        <collection property="MEMBERS" column="NO" javaType="ArrayList" ofType="hashMap" select="selectUserMeeting">

        </collection>
    </resultMap>

    <select id="selectUserMeeting" parameterType="String" resultType="hashMap">
        select
            UM.USER_NO,
            U.BIRTH_DAY,
            U.EMAIL,
            U.NAME,
            U.INTRO,
            U.PROFILE_IMAGE
        from USER_MEETING UM join USERS U on U.USER_NO = UM.USER_NO
        where MEETING_NO = #{no} and REG_LEVEL = 1
    </select>
    
    
    <select id="selectByNo" parameterType="String" resultMap="meetingViewMap">
        select
            M.NO,
            M.USER_NO,
            M.TITLE,
            M.CONTENT,
            I.CATEGORY_PARENT,
            M.CATEGORY_CODE,
            (
                select NAME
                from INTERESTS I2
                where I2.CATEGORY_CODE = I.CATEGORY_PARENT
            ) CATEGORY_PARENT_NAME,
            I.NAME CATEGORY_NAME,
            (
                select JSON_ARRAYAGG(T.TAG_NAME)
                from MEETING_TAG MT join TAG T on T.TAG_NO = MT.TAG_NO
                where MT.MEETING_NO = M.NO
                group by MT.MEETING_NO
            ) TAGS,
            MI.IMAGE_NAME,
            MA.ADDRESS_NO,
            MA.ADDRESS,
            MA.ROAD_ADDRESS,
            MA.JIBUN_ADDRESS,
            MA.PLACE_NAME,
            MA.LAT_Y,
            MA.LON_X,
            (
                select count(*)
                from MEETING_LIKE ML
                where ML.MEETING_NO = M.NO
            ) LIKE_COUNT,
            M.PERSON_NUMBER,
            (
                select count(*)
                from USER_MEETING um
                where um.MEETING_NO = m.NO
            ) PERSON_COUNT
        from MEETING M join INTERESTS I on I.CATEGORY_CODE = M.CATEGORY_CODE
                       join MEETING_IMAGES MI on M.NO = MI.MEETING_NO
                       join MEETING_ADDRESS MA on M.NO = MA.MEETING_NO
        where M.NO = #{no} and DEL_TAG = 'N'
    </select>

    <select id="selectByUserCount" parameterType="String" resultType="int">
        select count(*) from MEETING where USER_NO = #{userNo}
    </select>




    <!-- 모임 좋아요 개수 -->
    <!-- 모임 좋아요 개수 -->
    <select id="likeCount" parameterType="String" resultType="int">
        select count(*) from MEETING_LIKE where MEETING_NO = #{meetingNo}
    </select>
    

    <!-- 모임 좋아요 상태 -->
    <!-- 모임 좋아요 상태 -->
    <select id="meetingLikeState" parameterType="String" resultType="int">
        select count(*) from MEETING_LIKE where USER_NO = #{userNo} and MEETING_NO = #{meetingNo}
    </select>


    <!-- 모임 좋아요 등록 -->
    <!-- 모임 좋아요 등록 -->
    <insert id="insertMeetingLike" parameterType="String">
        <selectKey keyColumn="no" keyProperty="no" resultType="String" order="BEFORE">
            select nextval('MEETING_LIKE_SEQ') from dual
        </selectKey>

        insert into MEETING_LIKE(no, meeting_no, user_no)
        values (#{no}, #{meetingNo}, #{userNo});
    </insert>

    <!-- 모임 좋아요 취소 -->
    <!-- 모임 좋아요 취소 -->
    <delete id="deleteMeetingLike" parameterType="String">
        delete from MEETING_LIKE where MEETING_NO = #{meetingNo} and USER_NO = #{userNo}
    </delete>




    <!-- 가입신청 전, 신청 여부 확인 -->
    <!-- 가입신청 전, 신청 여부 확인 -->
    <select id="meetingUserCount" parameterType="String" resultType="int">
        select count(*) from USER_MEETING where USER_NO = #{userNo} and MEETING_NO = #{meetingNo}
    </select>

    <!-- 가입신청 전, 인원 확인 -->
    <!-- 가입신청 전, 인원 확인 -->
    <select id="meetingMemberCount" parameterType="String" resultType="hashMap">
        select cast(count(*) as SIGNED INTEGER) as COUNT, cast((M.PERSON_NUMBER) as SIGNED INTEGER) as "PERSON_NUMBER"
            from USER_MEETING UM join MEETING M on M.NO = UM.MEETING_NO
        where MEETING_NO = #{meetingNo} and UM.REG_LEVEL = 1
        group by PERSON_NUMBER
    </select>

    <!-- 가입신청 -->
    <!-- 가입신청 -->
    <insert id="insertMeetingSub" parameterType="String">
        insert into USER_MEETING(user_no, meeting_no, reg_level, right_no)
        values (#{userNo}, #{meetingNo}, 2, 2)
    </insert>








    <!-- 가입신청 리스트 -->
    <!-- 가입신청 리스트 -->
    <!-- 가입신청 리스트 -->
    <select id="moimSubscribeList" parameterType="String" resultMap="moimSubscribeListMap">
        select UM.*, M.TITLE, M.PERSON_NUMBER
        from USER_MEETING UM join MEETING M on UM.MEETING_NO = M.NO
        where UM.USER_NO = #{userNo} and RIGHT_NO = 1
    </select>

    <resultMap id="moimSubscribeListMap" type="hashMap">
        <association property="MEETING" javaType="hashMap" column="meeting_no">
            <result column="NO" jdbcType="BIGINT" property="NO"/>
            <result column="USER_NO" jdbcType="BIGINT" property="USER_NO"/>
            <result column="MEETING_NO" jdbcType="BIGINT" property="MEETING_NO"/>
            <result column="PERSON_NUMBER" jdbcType="BIGINT" property="PERSON_NUMBER"/>
            <result column="TITLE" jdbcType="VARCHAR" property="TITLE"/>
            <result column="REG_LEVEL" jdbcType="BIGINT" property="REG_LEVEL"/>
            <result column="RIGHT_NO" jdbcType="BIGINT" property="RIGHT_NO"/>
            <result column="REGDATE" jdbcType="TIMESTAMP" property="REGDATE"/>
        </association>
        <collection property="USER_LIST" column="meeting_no" javaType="ArrayList" ofType="hashMap" select="selectUserMeetingList"/>
    </resultMap>

    <select id="selectUserMeetingList" parameterType="String" resultType="hashMap">
        select U.*, UM.NO "USER_MEETING_NO"
        from USER_MEETING UM join USERS U on U.USER_NO = UM.USER_NO
        where MEETING_NO = #{meetingNo} and REG_LEVEL = 2
    </select>





    <!-- 최종 수락 -->
    <!-- 최종 수락 -->
    <!-- 최종 수락 -->
    <update id="updateUserMeetingSubResult" parameterType="hashMap">
        update USER_MEETING
        set REG_LEVEL = 1
        where 
        <foreach collection="Array" item="item" index="index" separator="or">
            NO = #{item}
        </foreach>
    </update>
    
    
    <!-- 최종 거절 -->
    <!-- 최종 거절 -->
    <!-- 최종 거절 -->
    <update id="updateUserMeetingSubRefusal">
        update USER_MEETING
        set REG_LEVEL = 3
        where
        <foreach collection="Array" item="item" index="index" separator="or">
            NO = #{item}
        </foreach>
    </update>
</mapper>
